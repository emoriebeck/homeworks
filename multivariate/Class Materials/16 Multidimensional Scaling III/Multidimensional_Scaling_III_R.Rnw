\documentclass[fleqn]{article}
\setlength\parindent{0pt}
\usepackage{fullpage} 
\usepackage{dcolumn}
\usepackage{fixltx2e}
\usepackage{amsmath}
\usepackage{scrextend}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{5}
\setcounter{tocdepth}{5}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
            bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
            breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
{hyperref}
\hypersetup{
  pdfstartview={XYZ null null 1}}
\usepackage{breakurl}
\usepackage{amsfonts}
\usepackage[dvips]{epsfig}
\usepackage{algorithm2e}
\usepackage{verbatim}
\usepackage{IEEEtrantools}
\usepackage{mathtools}
\usepackage{scrextend}
\usepackage{enumitem}
\usepackage{graphicx}
\graphicspath{ {images/} }
\newcolumntype{L}[1]{>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
\newcolumntype{C}[1]{>{\centering\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
\newcolumntype{R}[1]{>{\raggedleft\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}

\begin{document}
\title{Multidimensional Scaling III}
\author{Mike Strube}
\date{\today}
\maketitle

\section{Preliminaries}
\textbf{\large{\textit{
In this section, the RStudio workspace and console panes are cleared of old output, variables, and other miscellaneous debris. 
Packages are loaded and any required data files are retrieved.
}}}

<<tidy=TRUE>>=
options(replace.assign=TRUE,width=65, digits=4,scipen=4,fig.width=4,fig.height=4)
# Clear the workspace and console.
rm(list = ls(all = TRUE)) 
cat("\014")
# Turn off showing of significance asterisks.
options(show.signif.stars=F)
# Set the contrast option; important for ANOVAs.
options(contrasts = c('contr.sum','contr.poly'))
how_long <- Sys.time()
set.seed(123)
library(knitr)
@

<<tidy=TRUE>>=
library(psych)
library(ggplot2)
library(MASS)
library(sciplot)
library(ggplot2)
library(vegan)
library(smacof)
library(ape)
library(ade4)
library(ecodist)
library(scatterplot3d)
@

\subsection{Main Data File}
\textbf{\large{\textit{
Data are from 13 surveys conducted between 1982 and 2011 that asked participants to rank U.S. presidents according to their overall quality.  
The rankings for presidents from Washington through Reagan are included here. 
The surveys were sponsored by a variety of entities: Wall Street Journal, C-SPAN, Siena College, The Times (British), Chicago Tribune, etc. \newline
\newline
The sources ranged widely in their nature. 
Some were popular opinion polls, some were academics (political scientists, law professors), some were political journalists, some were a blend of various sources. 
Sample sizes varied widely.
\newline
}}}
<<tidy=TRUE>>=
# Get the drug use data from the working directory.
setwd("C:\\Courses\\Psychology 516\\PowerPoint\\2018")
Presidents<-read.table('presidents_transposed.csv',sep=',',header=TRUE)
Presidents <- as.data.frame(Presidents)
row.names(Presidents)<-Presidents$Name
# Normalize the ranks.
for(i in seq(2,14)){
  M <- max(Presidents[,i])-1
  for(j in seq(1,length(Presidents[,1]))) {
    Presidents[j,i] <- (Presidents[j,i]-1)/M
  }
}
# Create distance matrices
Presidents_Dist_1<-dist(Presidents[,2],method="euclidean",diag=TRUE)
Presidents_Dist_2<-dist(Presidents[,3],method="euclidean",diag=TRUE)
Presidents_Dist_3<-dist(Presidents[,4],method="euclidean",diag=TRUE)
Presidents_Dist_4<-dist(Presidents[,5],method="euclidean",diag=TRUE)
Presidents_Dist_5<-dist(Presidents[,6],method="euclidean",diag=TRUE)
Presidents_Dist_6<-dist(Presidents[,7],method="euclidean",diag=TRUE)
Presidents_Dist_7<-dist(Presidents[,8],method="euclidean",diag=TRUE)
Presidents_Dist_8<-dist(Presidents[,9],method="euclidean",diag=TRUE)
Presidents_Dist_9<-dist(Presidents[,10],method="euclidean",diag=TRUE)
Presidents_Dist_10<-dist(Presidents[,11],method="euclidean",diag=TRUE)
Presidents_Dist_11<-dist(Presidents[,12],method="euclidean",diag=TRUE)
Presidents_Dist_12<-dist(Presidents[,13],method="euclidean",diag=TRUE)
Presidents_Dist_13<-dist(Presidents[,14],method="euclidean",diag=TRUE)
# Combine into a list.
Presidents_Dist <- list(Presidents_Dist_1,Presidents_Dist_2,Presidents_Dist_3,
                        Presidents_Dist_4,Presidents_Dist_5,Presidents_Dist_6,
                        Presidents_Dist_7,Presidents_Dist_8,Presidents_Dist_9,
                        Presidents_Dist_10,Presidents_Dist_11,Presidents_Dist_12,
                        Presidents_Dist_13)
@

\subsection{Additional Data Files}
\textbf{\large{\textit{
There is additional information about the sources that could prove useful in interpretting the MDS outcomes.
Likewise, there is additional information about the objects (Presidents) that could be important.
In the latter case, it comes from two places.
First, there is objective information (age, height, etc.) that could prove interesting.
Second, other surveys, in particular the Siena survey, could be revealing.
The Siena survey used here comes from 2010, includes historians and presidential experts, and asked the participants to rank the presidents on the following dimensions: \newline
\newline
Background \newline
Imagination \newline
Integrity \newline
Intelligence  \newline
Luck \newline
Willing to take risks \newline 
Avoid crucial mistakes  \newline
Court appointments  \newline
Domestic accomplishments  \newline
Executive Appointments \newline
Foreign policy accomplishments  \newline
Handling of U.S. economy  \newline
Party leadership  \newline
Relationship with Congress \newline 
Ability to compromise \newline
Communication ability  \newline
Executive ability  \newline
Leadership ability  \newline
Overall ability \newline
}}}

<<tidy=TRUE>>=
source_info <- read.table('source_info.csv',sep=',',header=TRUE)
source_info <- as.data.frame(source_info)
prez_info <- read.table('presidents_height_age.csv',sep=',',header=TRUE)
prez_info <- as.data.frame(prez_info)
siena_info <- read.table('siena_info.csv',sep=',',header=TRUE)
siena_info <- as.data.frame(siena_info)
@

\section{Function}
\textbf{\large{\textit{
The smacofIndDiff( ) function can be used for three-way or individual differences MDS. 
It will provide the following values in the fit object. \newline
\newline
delta: Observed dissimilarities \newline
\newline
obsdiss: List of observed dissimilarities, normalized \newline
\newline
confdiss: List of configuration dissimilarities \newline
\newline
conf: List of matrices of final configurations \newline
\newline
gspace: Joint configurations aka group stimulus space \newline
\newline
cweights: Configuration weights \newline
\newline
stress.m: stress value for metric MDS \newline
\newline
stress.nm: stress value for non-metric MDS (if computed) \newline
\newline
stress.co: Constrained stress value \newline
\newline
spp: Stress per point \newline
\newline
sps: Stress per subject (matrix) \newline
\newline
ndim: Number of dimensions \newline
\newline
model: Type of smacof model \newline
\newline 
niter: Number of iterations \newline
\newline
nobj: Number of objects \newline
}}}

\section{Equality Constraint}
\textbf{\large{\textit{
Addtional weight restrictions can be imposed with "identity" which restricts the configurations across individuals/replications/ways to be equal.
This is useful to get an overall or combined plot.
This solution can be compared to that for diagonal constraint and no constraint to determine if the latter complexity is warranted.
As an initial stage, models with different numbers of dimensions can be examined to determine the best number for additional examination.
}}}

\subsection{Basic Model Fit}
\textbf{\large{\textit{
The basic model is fit by specifying the type of analysis (ordinal here), the constraint (equality here), and the number of dimensions (2 here).
The maximum number of iterations is also specified here to insure that a solution can be found.
}}}

<<tidy=TRUE>>=
identity_fit <- smacofIndDiff(Presidents_Dist, ndim = 2,constraint="identity",itmax=1000,type="ordinal")
summary(identity_fit)
@

\subsection{Additional Information}
\textbf{\large{\textit{
As with other MDS procedures, additional, largely graphical, information can be consulted to determine the nature of the solution and its adequacy.
}}}

\subsubsection{Stress Plots}
\textbf{\large{\textit{
Stress can be viewed in several ways.
First, there will be an overall stress value for the solution, as with any MDS.
Second, the proportion of that stress value that is due to different objects can be illustrated.
Third, the stress due to different sources can be illustrated.
The latter two can help identify the reasons for good and poor fit.
}}}
<<tidy=TRUE>>=
identity_fit$stress
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(identity_fit$spp)
names(plot_data) <- c("SP")
plot_data$Name <- Presidents$Name
plot_data <-plot_data[order(-plot_data[,1]),]
plot_data$Index <- seq(1,length(plot_data[,1]))

ggplot(plot_data, aes(x=Index,y=SP)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,8,1))) +
    scale_x_continuous(breaks=c(seq(1,37,1))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3,angle=45) +
    coord_cartesian(xlim = c(1,37), ylim = c(0,8)) +
    xlab("President") + 
    ylab("Stress Percentage") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_blank(),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Decomposition for Objects")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(identity_fit$sps)
names(plot_data) <- c("SS")
plot_data$Name <- c(paste("Source ",seq(1,13)))
plot_data <-plot_data[order(-plot_data[,1]),]
plot_data$Index <- seq(1,length(plot_data[,1]))

ggplot(plot_data, aes(x=Index,y=SS)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,22,2))) +
    scale_x_continuous(breaks=c(seq(1,13,1))) +
    geom_text(aes(label=Name),hjust=-.15, vjust=0,size=5,angle=45) +
    coord_cartesian(xlim = c(1,14), ylim = c(0,22)) +
    xlab("Source") + 
    ylab("Stress Percentage") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_blank(),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Decomposition for Sources")
@

\subsubsection{Group Configuration Plot}
\textbf{\large{\textit{
The group configuration plot shows the aggregate solution or group solution.
}}}

<<tidy=TRUE>>=
plot_data <- as.data.frame(identity_fit$gspace)
names(plot_data) <- c("D1","D2")
plot_data$Stress <- identity_fit$spp
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=plot_data$Stress, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-.5,.5,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.35, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.5,.5)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Size = Object Stress)")
@

\subsubsection{Source Configuration Plots}
\textbf{\large{\textit{
The configuration plots for individual sources are forced to be identical in this solution.
}}}

\subsubsection{Shepard Plots}
\textbf{\large{\textit{
The following Shepard plots show the relationship between aggregated observed dissimilarities and the aggregated configuration distances.
}}}

<<tidy=TRUE>>=
plot(identity_fit, plot.type = "Shepard",
     xlab=list("Aggregated Observed Dissimilarities", cex=1.25),
     ylab=list("Aggregated Configuration Distances", cex=1.25),
     main=list("Shepard Plot",cex=1.5),
     xlim=c(0,12),ylim=c(0,30))

# The same information is contained in the residual plot, but a best-fit line 
# also included. This is really more appropriate for a metric MDS, but
# does provide useful information for fit.
plot(identity_fit, plot.type = "resplot",
     xlab=list("Aggregated Normalized Dissimilarities (d-hats)", cex=1.25),
     ylab=list("Aggregated Configuration Distances", cex=1.25),
     main=list("Residual Plot",cex=1.5),
     xlim=c(0,30),ylim=c(0,30))
@

\textbf{\large{\textit{
Individual source Shepard plots can also be constructed. These provide a way to visual individual fit. 
Note that although the configuration plots are forced to be the same for all sources, the fit of that common solution will not be the same for all sources.
}}}

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[1]]),unlist(identity_fit$confdist[[1]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 1")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[2]]),unlist(identity_fit$confdist[[2]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 2")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[3]]),unlist(identity_fit$confdist[[3]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 3")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[4]]),unlist(identity_fit$confdist[[4]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 4")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[5]]),unlist(identity_fit$confdist[[5]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 5")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[6]]),unlist(identity_fit$confdist[[6]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 6")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[7]]),unlist(identity_fit$confdist[[7]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 7")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[8]]),unlist(identity_fit$confdist[[8]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 8")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[9]]),unlist(identity_fit$confdist[[9]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 9")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[10]]),unlist(identity_fit$confdist[[10]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 10")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[11]]),unlist(identity_fit$confdist[[11]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 11")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[12]]),unlist(identity_fit$confdist[[12]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 12")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[13]]),unlist(identity_fit$confdist[[13]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 13")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(identity_fit$delta[[1]]),unlist(identity_fit$confdist[[1]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
for(j in seq(2,13)) {
  plot_temp <-(matrix(cbind(unlist(identity_fit$delta[[j]]),unlist(identity_fit$confdist[[j]])),ncol=2,byrow=FALSE))
  plot_temp <- as.data.frame(plot_temp)
  names(plot_temp) <- c("Dissimilarity","Distance")
  plot_data <- rbind(plot_data,plot_temp)
}
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: All Sources")
@

\subsubsection{Weights}
\textbf{\large{\textit{
The sources cannot weight the dimensions differently in this soluton.
To the extent that the INDSCAL solution shows variability in weights, the latter is more appropriate.
}}}

<<tidy=TRUE>>=
identity_fit$cweights
@

\subsubsection{Source and Object Information}
\textbf{\large{\textit{
Additional source information can be used to help identify the meaning behind source differences as indicated by source weights and stress.
Likewise, additional object information can help identify the nature of MDS dimensions and relative fit for objects.
Note that for this solution, the weights must be the same for all sources and so only source stress will vary.
}}}

<<tidy=TRUE>>=
prez_data <- as.data.frame(cbind(prez_info,siena_info[,2:21],
                                 as.data.frame(identity_fit$gspace),
                                 as.data.frame(identity_fit$spp)))
round(cor(prez_data[,c(2:26)],prez_data[,25:26],use="pairwise.complete.obs"),2)

source_info
source_info$Dems <- ifelse(source_info$Party=="D",1,0)
source_info$Stress <- identity_fit$sps
cor(source_info[,c(2,4:7)])
@

\section{Diagonal Constraint}
\textbf{\large{\textit{
INDSCAL is performed with configuration weight matrices restricted to be diagonal.
As an initial stage, models with different numbers of dimensions can be examined to determine the best number for additional examination.
}}}

\subsection{Basic Model Fit}
\textbf{\large{\textit{
The basic model is fit by specifying the type of analysis (ordinal here), the constraint (indscal here), and the number of dimensions (2 here).
The maximum number of iterations is also specified here to insure that a solution can be found.
This solution will allow the 13 sources to weight the dimensions differently, but require that the weight matrices are diagonal. 
}}}

<<tidy=TRUE>>=
indscal_fit <- smacofIndDiff(Presidents_Dist, ndim = 2,constraint="indscal",itmax=1000,type="ordinal")
summary(indscal_fit)
@

\subsection{Additional Information}
\textbf{\large{\textit{
As with other MDS procedures, additional, largely graphical, information can be consulted to determine the nature of the solution and its adequacy.
}}}

\subsubsection{Stress Plots}
\textbf{\large{\textit{
Stress can be viewed in several ways.
First, there will be an overall stress value for the solution, as with any MDS.
Second, the proportion of that stress value that is due to different objects can be illustrated.
Third, the stress due to different sources can be illustrated.
The latter two can help identify the reasons for good and poor fit.
}}}
<<tidy=TRUE>>=
indscal_fit$stress
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$spp)
names(plot_data) <- c("SP")
plot_data$Name <- plot_data$Name <- Presidents$Name
plot_data <-plot_data[order(-plot_data[,1]),]
plot_data$Index <- seq(1,length(plot_data[,1]))

ggplot(plot_data, aes(x=Index,y=SP)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,7,1))) +
    scale_x_continuous(breaks=c(seq(1,37,1))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3,angle=45) +
    coord_cartesian(xlim = c(1,38), ylim = c(0,7)) +
    xlab("President") + 
    ylab("Stress Percentage") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_blank(),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Decomposition for Objects")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$sps)
names(plot_data) <- c("SS")
plot_data$Name <- c(paste("Source ",seq(1,13)))
plot_data <-plot_data[order(-plot_data[,1]),]
plot_data$Index <- seq(1,length(plot_data[,1]))

ggplot(plot_data, aes(x=Index,y=SS)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,22,2))) +
    scale_x_continuous(breaks=c(seq(1,13,1))) +
    geom_text(aes(label=Name),hjust=-.15, vjust=0,size=5,angle=45) +
    coord_cartesian(xlim = c(1,15), ylim = c(0,22)) +
    xlab("Source") + 
    ylab("Stress Percentage") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_blank(),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Decomposition for Sources")
@

\subsubsection{Group Configuration Plot}
\textbf{\large{\textit{
The group configuration plot shows the aggregate solution or group solution.
}}}

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$gspace)
names(plot_data) <- c("D1","D2")
plot_data$Stress <- indscal_fit$spp
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=plot_data$Stress, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-.25,.25,.05))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.25,.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Size = Object Stress)")
@

\subsubsection{Source Configuration Plots}
\textbf{\large{\textit{
The configuration plots for individual sources can be examined to determine if particular sources have maps that deviate markedly from the group.
}}}

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[1]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 1)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[2]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 2)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[3]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 3)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[4]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 4)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[5]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 5)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[6]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 6)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[7]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 7)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[8]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 8)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[9]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 9)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[10]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 10)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[11]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 11)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[12]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 12)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(indscal_fit$conf[[13]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 13)")
@

\subsubsection{Shepard Plots}
\textbf{\large{\textit{
Shepard plots show the relationship between aggregated observed dissimilarities and the aggregated configuration distances.
}}}

<<tidy=TRUE>>=
plot(indscal_fit, plot.type = "Shepard",
     xlab=list("Aggregated Observed Dissimilarities", cex=1.25),
     ylab=list("Aggregated Configuration Distances", cex=1.25),
     main=list("Shepard Plot",cex=1.5),
     xlim=c(0,12),ylim=c(0,30))

# The same information is contained in the residual plot, but a best-fit line 
# also included. This is really more appropriate for a metric MDS, but
# does provide useful information for fit.
plot(indscal_fit, plot.type = "resplot",
     xlab=list("Aggregated Normalized Dissimilarities (d-hats)", cex=1.25),
     ylab=list("Aggregated Configuration Distances", cex=1.25),
     main=list("Residual Plot",cex=1.5),
     xlim=c(0,30),ylim=c(0,30))
@


\textbf{\large{\textit{
Individual source Shepard plots can also be constructed. These provide a way to visual individual fit. 
Note that although the configuration plots are forced to be the same for all sources, the fit of that common solution will not be the same for all sources.
}}}

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[1]]),unlist(indscal_fit$confdist[[1]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 1")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[2]]),unlist(indscal_fit$confdist[[2]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 2")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[3]]),unlist(indscal_fit$confdist[[3]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 3")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[4]]),unlist(indscal_fit$confdist[[4]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 4")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[5]]),unlist(indscal_fit$confdist[[5]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 5")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[6]]),unlist(indscal_fit$confdist[[6]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 6")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[7]]),unlist(indscal_fit$confdist[[7]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 7")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[8]]),unlist(indscal_fit$confdist[[8]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 8")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[9]]),unlist(indscal_fit$confdist[[9]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 9")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[10]]),unlist(indscal_fit$confdist[[10]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 10")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[11]]),unlist(indscal_fit$confdist[[11]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 11")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[12]]),unlist(indscal_fit$confdist[[12]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 12")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[13]]),unlist(indscal_fit$confdist[[13]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 13")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(indscal_fit$delta[[1]]),unlist(indscal_fit$confdist[[1]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
for(j in seq(2,13)) {
  plot_temp <-(matrix(cbind(unlist(indscal_fit$delta[[j]]),unlist(indscal_fit$confdist[[j]])),ncol=2,byrow=FALSE))
  plot_temp <- as.data.frame(plot_temp)
  names(plot_temp) <- c("Dissimilarity","Distance")
  plot_data <- rbind(plot_data,plot_temp)
}
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: All Sources")
@

\subsubsection{Weights}
\textbf{\large{\textit{
The sources can weight the dimensions differently.
The weights represent the extent to which the group configuration needs to be stretched or shrunk in order to achieve a particular source configuration.
The weight matrices are diagonal so that any stretching or shrinking is done for each dimension independently.
The combined result can be complex, appearing to rotate the group solution (although no rotation is actually being accomplished, just contraction or expansion of the group configuration).
The weights can be plotted to determine if some sources cluster together.
}}}

<<tidy=TRUE>>=
indscal_fit$cweights

plot_data <- matrix(NA,nrow=13,ncol=2)
for (i in 1:13) {
  plot_data[i,1] <- indscal_fit$cweights[[i]][1,1]
  plot_data[i,2] <- indscal_fit$cweights[[i]][2,2]
}
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1","D2")
plot_data$Names <- c(paste("Source ",seq(1,13,1)))
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = 1, y = 1,
                 xend = D1, yend = D2),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1,y=D2),color="blue",size=2) +  
    geom_text(data=plot_data,aes(x=plot_data$D1,y=plot_data$D2,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=4,angle=0) +
    coord_cartesian(xlim = c(0,1.25), ylim = c(0,8)) +
    scale_x_continuous(breaks=c(seq(0,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(0,8,1))) +
    ylab("Dimension 2 Weight") + 
    xlab("Dimension 1 Weight") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Source Weights")
@


\textbf{\large{\textit{
A source configuration is an adjustment to the group space, with the adjustment indicated by the source weight matrix.  
The nature of the adjustment can be shown in plots that represent movement from the group space to the source configuration.
}}}

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[1]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 1 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[2]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 2 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[3]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 3 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[4]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 4 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[5]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 5 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[6]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 6 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[7]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 7 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[8]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 8 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[9]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 9 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[10]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 10 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[11]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 11 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[12]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 12 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(indscal_fit$gspace,indscal_fit$conf[[13]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 13 Configuration")
@

\subsubsection{Source and Object Information}
\textbf{\large{\textit{
Additional source information can be used to help identify the meaning behind source differences as indicated by source weights and stress.
Likewise, additional object information can help identify the nature of MDS dimensions and relative fit for objects.
}}}

<<tidy=TRUE>>=
prez_data <- as.data.frame(cbind(prez_info,siena_info[,2:21],
                                 as.data.frame(indscal_fit$gspace),
                                 as.data.frame(indscal_fit$spp)))
round(cor(prez_data[,2:26],prez_data[,25:26],use="pairwise.complete.obs"),2)

source_weights <- matrix(NA,nrow=13,ncol=2)
for (i in 1:13) {
  source_weights[i,1] <- indscal_fit$cweights[[i]][1,1]
  source_weights[i,2] <- indscal_fit$cweights[[i]][2,2]
}
source_weights <- as.data.frame(source_weights)
names(source_weights) <- c("D1","D2")
source_weights$Names <- c(paste("Source ",seq(1,13,1)))

source_data <-as.data.frame(cbind(source_info[,1:6],source_weights,as.data.frame(indscal_fit$sps)))
names(source_data) <- c(names(source_data[c(1:9)]),"Stress")

round(cor(source_data[,c(2,4:8,10)],use="pairwise.complete.obs"),2)
@

\section{No Constraint}
\textbf{\large{\textit{
IDIOSCAL can be computed using the "idioscal" argument. 
The weight matrices are then unconstrained.
This means that the source configurations are linear combinations (not just expansion and contraction) of the group configuration.
This is akin to rotation in principal components analysis and factor analysis.
}}}

\subsection{Basic Model Fit}
\textbf{\large{\textit{
The basic model is fit by specifying the type of analysis (ordinal here), the constraint (indscal here), and the number of dimensions (2 here).
The maximum number of iterations is also specified here to insure that a solution can be found.
This solution will allow the 13 sources to weight the dimensions differently, but require that the weight matrices are diagonal. 
}}}

<<tidy=TRUE>>=
idioscal_fit <- smacofIndDiff(Presidents_Dist, ndim = 2,constraint="idioscal",itmax=1000,type="ordinal")
summary(idioscal_fit)
@

\subsection{Additional Information}
\textbf{\large{\textit{
As with other MDS procedures, additional, largely graphical, information can be consulted to determine the nature of the solution and its adequacy.
}}}

\subsubsection{Stress Plots}
\textbf{\large{\textit{
Stress can be viewed in several ways.
First, there will be an overall stress value for the solution, as with any MDS.
Second, the proportion of that stress value that is due to different objects can be illustrated.
Third, the stress due to different sources can be illustrated.
The latter two can help identify the reasons for good and poor fit.
}}}
<<tidy=TRUE>>=
idioscal_fit$stress
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$spp)
names(plot_data) <- c("SP")
plot_data$Name <- plot_data$Name <- Presidents$Name
plot_data <-plot_data[order(-plot_data[,1]),]
plot_data$Index <- seq(1,length(plot_data[,1]))

ggplot(plot_data, aes(x=Index,y=SP)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,7,1))) +
    scale_x_continuous(breaks=c(seq(1,37,1))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3,angle=45) +
    coord_cartesian(xlim = c(1,38), ylim = c(0,7)) +
    xlab("President") + 
    ylab("Stress Percentage") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_blank(),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Decomposition for Objects")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$sps)
names(plot_data) <- c("SS")
plot_data$Name <- c(paste("Source ",seq(1,13)))
plot_data <-plot_data[order(-plot_data[,1]),]
plot_data$Index <- seq(1,length(plot_data[,1]))

ggplot(plot_data, aes(x=Index,y=SS)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,22,2))) +
    scale_x_continuous(breaks=c(seq(1,13,1))) +
    geom_text(aes(label=Name),hjust=-.15, vjust=0,size=5,angle=45) +
    coord_cartesian(xlim = c(1,15), ylim = c(0,22)) +
    xlab("Source") + 
    ylab("Stress Percentage") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_blank(),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Decomposition for Sources")
@

\subsubsection{Group Configuration Plot}
\textbf{\large{\textit{
The group configuration plot shows the aggregate solution or group solution.
}}}

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$gspace)
names(plot_data) <- c("D1","D2")
plot_data$Stress <- idioscal_fit$spp
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=plot_data$Stress, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-.25,.25,.05))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.25,.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Size = Object Stress)")
@

\subsubsection{Source Configuration Plots}
\textbf{\large{\textit{
The configuration plots for individual sources can be examined to determine if particular sources have maps that deviate markedly from the group.
}}}

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[1]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 1)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[2]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 2)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[3]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 3)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[4]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 4)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[5]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 5)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[6]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 6)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[7]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 7)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[8]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 8)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[9]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 9)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[10]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 10)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[11]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 11)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[12]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 12)")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(idioscal_fit$conf[[13]])
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space (Source 13)")
@

\subsubsection{Shepard Plots}
\textbf{\large{\textit{
Shepard plots show the relationship between aggregated observed dissimilarities and the aggregated configuration distances.
}}}

<<tidy=TRUE>>=
plot(idioscal_fit, plot.type = "Shepard",
     xlab=list("Aggregated Observed Dissimilarities", cex=1.25),
     ylab=list("Aggregated Configuration Distances", cex=1.25),
     main=list("Shepard Plot",cex=1.5),
     xlim=c(0,12),ylim=c(0,30))

# The same information is contained in the residual plot, but a best-fit line 
# also included. This is really more appropriate for a metric MDS, but
# does provide useful information for fit.
plot(idioscal_fit, plot.type = "resplot",
     xlab=list("Aggregated Normalized Dissimilarities (d-hats)", cex=1.25),
     ylab=list("Aggregated Configuration Distances", cex=1.25),
     main=list("Residual Plot",cex=1.5),
     xlim=c(0,30),ylim=c(0,30))
@


\textbf{\large{\textit{
Individual source Shepard plots can also be constructed. These provide a way to visual individual fit. 
Note that although the configuration plots are forced to be the same for all sources, the fit of that common solution will not be the same for all sources.
}}}

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[1]]),unlist(idioscal_fit$confdist[[1]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 1")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[2]]),unlist(idioscal_fit$confdist[[2]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 2")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[3]]),unlist(idioscal_fit$confdist[[3]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 3")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[4]]),unlist(idioscal_fit$confdist[[4]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 4")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[5]]),unlist(idioscal_fit$confdist[[5]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 5")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[6]]),unlist(idioscal_fit$confdist[[6]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 6")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[7]]),unlist(idioscal_fit$confdist[[7]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 7")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[8]]),unlist(idioscal_fit$confdist[[8]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 8")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[9]]),unlist(idioscal_fit$confdist[[9]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 9")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[10]]),unlist(idioscal_fit$confdist[[10]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 10")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[11]]),unlist(idioscal_fit$confdist[[11]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 11")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[12]]),unlist(idioscal_fit$confdist[[12]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 12")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[13]]),unlist(idioscal_fit$confdist[[13]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: Source 13")
@

<<tidy=TRUE>>=
plot_data <- matrix(cbind(unlist(idioscal_fit$delta[[1]]),unlist(idioscal_fit$confdist[[1]])),ncol=2,byrow=FALSE)
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("Dissimilarity","Distance")
for(j in seq(2,13)) {
  plot_temp <-(matrix(cbind(unlist(idioscal_fit$delta[[j]]),unlist(idioscal_fit$confdist[[j]])),ncol=2,byrow=FALSE))
  plot_temp <- as.data.frame(plot_temp)
  names(plot_temp) <- c("Dissimilarity","Distance")
  plot_data <- rbind(plot_data,plot_temp)
}
@

<<tidy=TRUE>>=
ggplot(plot_data, aes(x=Dissimilarity,y=Distance)) +
    geom_point(shape=19,color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    geom_smooth(method=loess,se=TRUE,color="black") +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Original Dissimilarity") + 
    ylab("Configuration Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space: All Sources")
@

\subsubsection{Weights}
\textbf{\large{\textit{
The sources can weight the dimensions differently.
Those can be plotted to determine if some sources cluster together.
The nature of the weights is now more complex because the off-diagonals are not constrained to 0.
This means that a source configuration is a linear combination of the group configuration dimensions.
The weight matrices thus are similar to the transformation matrices in principal components analysis and factor analysis that produce rotation.
That provides some additional insight into interpretation here.
If the columns of the weight matrix are normalized, then the weight matrix elements can be viewed as direction cosines (which can be converted to degrees) that indicate the relative position of the source dimensions relative to the group dimensions. 
}}}

<<tidy=TRUE>>=
idioscal_fit$cweights

plot_data <- matrix(NA,nrow=13,ncol=2)
for (i in 1:13) {
  plot_data[i,1] <- idioscal_fit$cweights[[i]][1,1]
  plot_data[i,2] <- idioscal_fit$cweights[[i]][2,2]
}
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1","D2")
plot_data$Names <- c(paste("Source ",seq(1,13,1)))
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = 1, y = 1,
                 xend = D1, yend = D2),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1,y=D2),color="blue",size=2) +  
    geom_text(data=plot_data,aes(x=plot_data$D1,y=plot_data$D2,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=4,angle=0) +
    coord_cartesian(xlim = c(.9,1.1), ylim = c(0,3)) +
    scale_x_continuous(breaks=c(seq(.9,1.1,.05))) +
    scale_y_continuous(breaks=c(seq(0,3,.5))) +
    ylab("Dimension 2 Weight") + 
    xlab("Dimension 1 Weight") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Source Weights")
@

\textbf{\large{\textit{
A source configuration is an adjustment to the group space, with the adjustment indicated by the source weight matrix.  
The nature of the adjustment can be shown in plots that represent movement from the group space to the source configuration.
}}}

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[1]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 1 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[2]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 2 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[3]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 3 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[4]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 4 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[5]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 5 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[6]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 6 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[7]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 7 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[8]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 8 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[9]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 9 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[10]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 10 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[11]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 11 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[12]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 12 Configuration")
@

<<tidy=TRUE>>=
plot_data <- cbind(idioscal_fit$gspace,idioscal_fit$conf[[13]])
plot_data <- as.data.frame(plot_data)
names(plot_data) <- c("D1_G","D2_G","D1_I","D2_I")
plot_data$Names <- row.names(Presidents)
@

<<tidy=TRUE>>=
ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = D1_G, y = D2_G,
                 xend = D1_I, yend = D2_I),
                 color="black",size=.5,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=D1_G,y=D2_G),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D1_I,y=D2_I),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D1_I,y=plot_data$D2_I,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=3,angle=0) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-.6,.6)) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_y_continuous(breaks=round(c(seq(-.6,.6,.2)),2)) +
    ylab("Dimension 2") + 
    xlab("Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Group Space to Source 13 Configuration")
@

<<tidy=TRUE>>=
# Weight matrix off-diagonals.
source_weights <- matrix(NA,nrow=13,ncol=4)
colnames(source_weights) <- c("D_11","D_22","D_12","D_21")
for (i in seq(1,13,1)) {
  source_weights[i,1] <- idioscal_fit$cweights[[i]][1,1]  
  source_weights[i,2] <- idioscal_fit$cweights[[i]][2,2]  
  source_weights[i,3] <- idioscal_fit$cweights[[i]][1,2]
  source_weights[i,4] <- idioscal_fit$cweights[[i]][2,1]
}
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(source_weights)
plot_data$Names <- c(paste("Source ",seq(1,13)))

ggplot() +
    geom_point(data=plot_data, mapping=aes(x=D_12,y=D_21),color="blue",size=2) +  
    geom_text(data=plot_data,aes(x=plot_data$D_12,y=plot_data$D_21,
                                 label=plot_data$Names),hjust=-.25,
              vjust=0,size=4,angle=0) +
    coord_cartesian(xlim = c(-.04,.05), ylim = c(-3,2)) +
    scale_x_continuous(breaks=c(seq(-.04,.05,.01))) +
    scale_y_continuous(breaks=c(seq(-3,2,1))) +
    ylab("Dimension 2 1' Weight") + 
    xlab("Dimension 1 2' Weight") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Source Weights")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(source_weights)
plot_data$Names <- c(seq(1,13))

ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = 0, y = 0,
                 xend = D_12, yend = D_21),
                 color="black",size=.75,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=0,y=0),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=D_12,y=D_21),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$D_12,y=plot_data$D_21,
                                 label=plot_data$Names),hjust=-1,
              vjust=0,size=5,angle=0) +
    coord_cartesian(xlim = c(-.04,.05), ylim = c(-3,2)) +
    scale_x_continuous(breaks=c(seq(-.04,.05,.01))) +
    scale_y_continuous(breaks=c(seq(-3,2,1))) +
    ylab("Dimension 2 1' Weight") + 
    xlab("Dimension 1 2' Weight") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Source Weights")
@

<<tidy=TRUE>>=
# Conversion of off-diagonals to degrees of rotation.
source_angles <- matrix(NA,nrow=13,ncol=5)

squared_elements <- matrix(NA,ncol=2,nrow=2)
for (i in 1:13) {
  # Square the elements in the weight matrices.
  squared_elements <- (idioscal_fit$cweights[[i]])^2
  # Calculate the adjustment as the square root of the sum of the squared column
  # elements.
  C_adj <- sqrt(colSums(squared_elements))
  # Calculate the angles, with conversion from radians.
  source_angles[i,1] <- acos(idioscal_fit$cweights[[i]][1,1]/C_adj[1])*180/pi
  source_angles[i,2] <- acos(idioscal_fit$cweights[[i]][2,1]/C_adj[1])*180/pi
  source_angles[i,3] <- acos(idioscal_fit$cweights[[i]][1,2]/C_adj[2])*180/pi
  source_angles[i,4] <- acos(idioscal_fit$cweights[[i]][2,2]/C_adj[2])*180/pi
  source_angles[i,5] <- (90-source_angles[i,1]+source_angles[i,4])
}
source_angles <- as.data.frame(source_angles)
names(source_angles) <- c("A_D1","A_LOD","A_UOD","A_D2","Angle")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(source_angles)
plot_data$Names <- c(seq(1,13))

ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = 0, y = 0,
                 xend = A_D1, yend = A_LOD),
                 color="black",size=.75,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=0,y=0),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=A_D1,y=A_LOD),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$A_D1,y=plot_data$A_LOD,
                                 label=plot_data$Names),hjust=-1,
              vjust=0,size=5,angle=0) +
    coord_cartesian(xlim = c(0,80), ylim = c(0,160)) +
    scale_x_continuous(breaks=c(seq(0,80,10))) +
    scale_y_continuous(breaks=c(seq(0,160,40))) +
    ylab("Angle Between Old Dimension 2 \nand New Dimension 1") + 
    xlab("Angle Between Old Dimension 1 and New Dimension 1") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Location of New Dimension 1")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(source_angles)
plot_data$Names <- c(seq(1,13))

ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = 0, y = 0,
                 xend = A_UOD, yend = A_D2),
                 color="black",size=.75,arrow=arrow(length=unit(0.30,"cm"),
                                                  ends="last", type = "open",angle=20)) +
    geom_point(data=plot_data, mapping=aes(x=0,y=0),color="blue",size=2) +  
    geom_point(data=plot_data, mapping=aes(x=A_UOD,y=A_D2),color="red",size=2) +   
    geom_text(data=plot_data,aes(x=plot_data$A_UOD,y=plot_data$A_D2,
                                 label=plot_data$Names),hjust=-1,
              vjust=0,size=5,angle=0) +
    coord_cartesian(xlim = c(0,100), ylim = c(0,5)) +
    scale_x_continuous(breaks=c(seq(0,100,10))) +
    scale_y_continuous(breaks=c(seq(0,5,1))) +
    ylab("Angle Between Old Dimension 2 \nand New Dimension 2") + 
    xlab("Angle Between Old Dimension 1 and New Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Location of New Dimension 2")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(source_angles)

ggplot() +
    geom_segment(data = plot_data, mapping=aes(x = seq(1,13,1), y = 0,
                 xend = seq(1,13,1), yend = Angle),
                 color="black",size=.5,linetype="dotted") +  
    geom_point(data=plot_data, mapping=aes(x=seq(1,13,1),y=Angle),color="blue",size=2) +  
    geom_text(data=plot_data,aes(x=seq(1,13,1),y=plot_data$Angle,
                                 label=round(plot_data$Angle,1)),hjust=-.25,
              vjust=0,size=4,angle=0) +
    coord_cartesian(xlim = c(1,14), ylim = c(0,90)) +
    scale_x_continuous(breaks=c(seq(1,13,1))) +
    scale_y_continuous(breaks=c(seq(0,90,10))) +
    ylab("Angle Between New Dimensions") + 
    xlab("Source") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
    ggtitle("Angle Between New Dimensions by Source")
@

\subsubsection{Source and Object Information}
\textbf{\large{\textit{
Additional source information can be used to help identify the meaning behind source differences as indicated by source weights and stress.
Likewise, additional object information can help identify the nature of MDS dimensions and relative fit for objects.
}}}

<<tidy=TRUE>>=
prez_data <- as.data.frame(cbind(prez_info,siena_info[,2:21],
                                 as.data.frame(idioscal_fit$gspace),
                                 as.data.frame(idioscal_fit$spp)))
round(cor(prez_data[,2:26],prez_data[,25:26],use="pairwise.complete.obs"),2)

# source_weights <- matrix(NA,nrow=13,ncol=2)
# for (i in 1:13) {
#   source_weights[i,1] <- idioscal_fit$cweights[[i]][1,1]
#   source_weights[i,2] <- idioscal_fit$cweights[[i]][2,2]
# }
# source_weights <- as.data.frame(source_weights)
# names(source_weights) <- c("D1","D2")
# source_weights$Names <- c(paste("Source ",seq(1,13,1)))

source_data <-as.data.frame(cbind(source_info[,1:6],source_weights,as.data.frame(idioscal_fit$sps),source_angles[5]))
names(source_data) <- c(names(source_data[c(1:10)]),"Stress","Angle")

round(cor(source_data[,c(2,4:12)]),2)
@

\section{Correlations Among Object Configuration Values}
\textbf{\large{\textit{
Listed below for informational purposes are the correlations among configuration values for the indscal and idioscal solutions, both source and group space.
}}}
<<tidy=TRUE>>=

for(i in seq(1,13)) {
  print(paste("Source ",i))
  print(cor(indscal_fit$conf[[i]]))
}

cor(indscal_fit$gspace)

for(i in seq(1,13)) {
  print(paste("Source ",i))
  print(cor(idioscal_fit$conf[[i]]))
}

cor(idioscal_fit$gspace)
@

\section{Why Are Those Weights So Wacky?}
\textbf{\large{\textit{
The source weights in the INDSCAL and IDIOSCAL solutions were, in some cases, quite extreme, appearing to move the source configuration substantially relative to the group configuration.
Moreover, the sign and magnitude does not seem consistent with intutition that they ought to average to an identity matrix (to essentially recover the group space).
Here we explore this a bit further.
The particularly large weights occur for the second dimension, which is substantially smaller than the first dimension. 
This means that a correspondingly large weight is necessary to effect even a small configuration shift.
In that regard, the large weights are not unusual.
Also, the group space is not necessarily a simple average of the source configurations.
}}}

\subsection{What is the Average of the Separate Source Weight Matrices?}
\textbf{\large{\textit{
Here we average the source weight matrices for the INDSCAL and IDIOSCAL solutions. 
They clearly do not produce identity matrices.
}}}
<<tidy=TRUE>>=
# INDSCAL
indscal_fit$cweights
weights_sum <- matrix(0,nrow=2,ncol=2)
for (i in 1:13) {
  weights_sum <- weights_sum + indscal_fit$cweights[[i]]
}
weights_sum <- weights_sum/13
weights_sum

# IDIOSCAL
idioscal_fit$cweights
weights_sum <- matrix(0,nrow=2,ncol=2)
for (i in 1:13) {
  weights_sum <- weights_sum + idioscal_fit$cweights[[i]]
}
weights_sum <- weights_sum/13
weights_sum
@

\subsection{What is the Average of the Separate Configuration Matrices?}
\textbf{\large{\textit{
Here we average the source configutation matrices for the INDSCAL and IDIOSCAL solutions to determine how closely they match the group space.
The average does not match closely the group space for INDSCAL but does a much better job for IDIOSCAL.
}}}
<<tidy=TRUE>>=
# INDSCAL
indscal_fit$conf
weights_sum <- matrix(0,nrow=37,ncol=2)
for (i in 1:13) {
  weights_sum <- weights_sum + indscal_fit$conf[[i]]
}
weights_sum <- weights_sum/13
weights_sum
indscal_fit$gspace
indscal_fit$gspace-weights_sum

# IDIOSCAL
idioscal_fit$conf
weights_sum <- matrix(0,nrow=37,ncol=2)
for (i in 1:13) {
  weights_sum <- weights_sum + idioscal_fit$conf[[i]]
}
weights_sum <- weights_sum/13
weights_sum
idioscal_fit$gspace
idioscal_fit$gspace-weights_sum
@

\subsection{What is the MDS Solution for the Average of the Separate Distance Matrices?}
\textbf{\large{\textit{
Here we do a simple MDS but on the average distance matrix from the 13 sources.
This will provide some insight into what the group space in weighted MDS represents.
}}}
<<tidy=TRUE>>=
# INDSCAL

# The distance matrices for each source
# are created and averaged.
dist_sum <- matrix(0,nrow=37,ncol=37)
for (i in 1:13) {
  dist_sum <- dist_sum + as.matrix(Presidents_Dist[[i]])
}
dist_mean <- dist_sum/13
dist_mean <- as.dist(dist_mean)
@

\subsubsection{Stress Plot}
<<tidy=TRUE>>=
mds_stress <- matrix(NA,nrow=6,ncol=2)
for (i in 1:6) {
  mds_1 <- smacofSym(dist_mean, ndim = i,verbose=FALSE,type="ordinal")
  mds_stress[i,1] <- i
  mds_stress[i,2] <- mds_1$stress
}
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(mds_stress)
names(plot_data) <- c("D","Stress")

ggplot(plot_data, aes(x=D,y=Stress)) +
    geom_point(shape=19,size=3, color="black",na.rm=TRUE) +   
    geom_line(size=1) +
    scale_y_continuous(breaks=c(seq(0,.06,.01))) +
    scale_x_continuous(breaks=c(seq(1,6,1))) +
    coord_cartesian(xlim = c(1,6), ylim = c(0,.06)) +
    xlab("Number of Dimensions") + 
    ylab("Stress") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Stress Plot for Mean President Distances")
@

\subsubsection{Shepard Plots}
\textbf{\large{\textit{
Shepard plots for up to 4 dimensions.
}}}
<<tidy=TRUE>>=
mds_2 <- smacofSym(dist_mean, ndim = 1,verbose=FALSE,type="ordinal")
dist_mean_1_fits <- Shepard(dist_mean,mds_2$conf)
mds_2 <- smacofSym(dist_mean, ndim = 2,verbose=FALSE,type="ordinal")
dist_mean_2_fits <- Shepard(dist_mean,mds_2$conf)
mds_2 <- smacofSym(dist_mean, ndim = 3,verbose=FALSE,type="ordinal")
dist_mean_3_fits <- Shepard(dist_mean,mds_2$conf)
mds_2 <- smacofSym(dist_mean, ndim = 4,verbose=FALSE,type="ordinal")
dist_mean_4_fits <- Shepard(dist_mean,mds_2$conf)
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(dist_mean_1_fits)

ggplot(plot_data, aes(x=x,y=yf)) +
    geom_point(shape=19,size=2, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Dissimilarity") + 
    ylab("Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Shepard Plot: One-Dimensional Space")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(dist_mean_2_fits)

ggplot(plot_data, aes(x=x,y=yf)) +
    geom_point(shape=19,size=2, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Dissimilarity") + 
    ylab("Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Shepard Plot: Two-Dimensional Space")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(dist_mean_3_fits)

ggplot(plot_data, aes(x=x,y=yf)) +
    geom_point(shape=19,size=2, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Dissimilarity") + 
    ylab("Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Shepard Plot: Three-Dimensional Space")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(dist_mean_4_fits)

ggplot(plot_data, aes(x=x,y=yf)) +
    geom_point(shape=19,size=2, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Dissimilarity") + 
    ylab("Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=0),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Shepard Plot: Four-Dimensional Space")
@
 
<<tidy=TRUE>>=
plot_data <- as.data.frame(dist_mean_1_fits)
plot_data <- rbind(plot_data,dist_mean_2_fits)
plot_data <- rbind(plot_data,dist_mean_3_fits)
plot_data <- rbind(plot_data,dist_mean_4_fits)
plot_data$D <- c(rep(1,666),rep(2,666),rep(3,666),rep(4,666))

p <- ggplot(plot_data, aes(x=x,y=yf)) +
    geom_point(shape=19,size=1, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(0,2.5,.25))) +
    scale_x_continuous(breaks=c(seq(0,1,.1))) +
    coord_cartesian(xlim = c(0,1), ylim = c(0,2.5)) +
    xlab("Dissimilarity") + 
    ylab("Distance") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Shepard Plots as a Function of Dimensions")
p + facet_wrap(~ D, nrow = 2)
@

\subsubsection{Scatterplots}
<<tidy=TRUE>>=
mds_2 <- smacofSym(dist_mean, ndim = 2,verbose=FALSE,type="ordinal")
@

<<tidy=TRUE>>=
plot_data <- as.data.frame(mds_2$conf)
names(plot_data) <- c("D1","D2")
plot_data$Name <- Presidents$Name

ggplot(plot_data, aes(x=D1,y=D2)) +
    geom_point(shape=19,size=3, color="red",na.rm=TRUE) +   
    scale_y_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    scale_x_continuous(breaks=c(seq(-1.25,1.25,.25))) +
    geom_text(aes(label=Name),hjust=-.25, vjust=0,size=3) +
    coord_cartesian(xlim = c(-1.25,1.25), ylim = c(-1.25,1.25)) +
    xlab("Dimension 1") + 
    ylab("Dimension 2") +
    theme(text=element_text(size = 14, family = "sans", color = "black", face="bold"),
          axis.text.y = element_text(colour = "black",size=12,face="bold"),
          axis.text.x = element_text(colour = "black",size=12,face="bold",angle=90),
          axis.title.x = element_text(margin=margin(15,0,0,0),size=16), 
          axis.title.y = element_text(margin=margin(0,15,0,0),size=16),
          axis.line.x = element_blank(),
          axis.line.y = element_blank(),
          plot.title = element_text(size=16, face="bold", 
                                    margin = margin(0, 0, 20, 0),hjust=.5),
          panel.background = element_rect(fill = "white",linetype = 1,color="black"),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),  
          plot.background = element_rect(fill = "white"),
          plot.margin = unit(c(1, 1, 1, 1), "cm"),
          legend.position = "bottom", 
          legend.title = element_blank()) +
  ggtitle("Two-Dimensional Space")
@

\subsubsection{Additional Functions and Output}
\textbf{\large{\textit{
The isoMDS( ) function in the MASS package along with the stressplot( ) function in the vegan package can produce nice looking Shepard plots.
These include linear and nonmetric fit indices. 
The former is the usual linear squared multiple correlation.
The latter is 1 minus the stress squared.
}}}
<<tidy=TRUE>>=
mds_4 <-isoMDS(dist_mean,k=1)
stressplot(mds_4,dist_mean,pch=16)
mds_4 <-isoMDS(dist_mean,k=2)
stressplot(mds_4,dist_mean,pch=16)
mds_4 <-isoMDS(dist_mean,k=3)
stressplot(mds_4,dist_mean,pch=16)
mds_4 <-isoMDS(dist_mean,k=4)
stressplot(mds_4,dist_mean,pch=16)
@

\textbf{\large{\textit{
The metaMDS( ) function in the vegan package can provide some other useful features.
In particular it runs the analysis from multiple start points to find the best solution and insure that a local minimum has not been found.
}}}
<<tidy=TRUE>>=
mds_4 <-metaMDS(dist_mean,k=1,distance="euclidean",autotransform = FALSE)
stressplot(mds_4,pch=16)
mds_4 <-metaMDS(dist_mean,k=2,distance="euclidean",autotransform = FALSE)
stressplot(mds_4,pch=16)
mds_4 <-metaMDS(dist_mean,k=3,distance="euclidean",autotransform = FALSE)
stressplot(mds_4,pch=16)
mds_4 <-metaMDS(dist_mean,k=4,distance="euclidean",autotransform = FALSE)
stressplot(mds_4,pch=16)
@

\subsubsection{Configuration Correlations}
\textbf{\large{\textit{
The configuration from the simple MDS of the average distance matrix resembles reasonably closely the group space from the identity solution and very closely the IDIOSCAL solution.
It does not resemble very closely the INDSCAL solution.
}}}
<<tidy=TRUE>>=
mds_2$conf
identity_fit$gspace-mds_2$conf
indscal_fit$gspace-mds_2$conf
idioscal_fit$gspace-mds_2$conf

all_conf <- cbind(mds_2$conf,identity_fit$gspace,indscal_fit$gspace,idioscal_fit$gspace)
all_conf <- as.data.frame(all_conf)
names(all_conf) <- c("mean_D1","mean_D2","identity_D1","identity_D2",
                     "indscal_D1","indscal_D2","idioscal_D1","idioscal_D2")
cor(all_conf)
@

\end{document}